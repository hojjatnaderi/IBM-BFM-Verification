/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.1                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    ( 0   -10  -0.04) //vertex 0
    ( 6   -10  -0.04) //vertex 1
    ( 6    -3  -0.04) //vertex 2
    ( 0    -3  -0.04) //vertex 3
    //
    ( 0   -10   0.04) //vertex 4
    ( 6   -10   0.04) //vertex 5
    ( 6    -3   0.04) //vertex 6
    ( 0    -3   0.04) //vertex 7
//    
    ( 13  -10  -0.04) //vertex 8
    ( 13   -3  -0.04) //vertex 9
    //
    ( 13  -10   0.04) //vertex 10
    ( 13   -3   0.04) //vertex 11
//
    ( 40  -10  -0.04) //vertex 12
    ( 40   -3  -0.04) //vertex 13
//
    ( 40  -10   0.04) //vertex 14
    ( 40   -3   0.04) //vertex 15
//
    ( 6     3  -0.04) //vertex 16
    ( 0     3  -0.04) //vertex 17
//
    ( 6     3   0.04) //vertex 18
    ( 0     3   0.04) //vertex 19    
//
    ( 13    3  -0.04) //vertex 20
    ( 13    3   0.04) //vertex 21   
//
    ( 40    3  -0.04) //vertex 22
    ( 40    3   0.04) //vertex 23   
//
    ( 6    10  -0.04) //vertex 24
    ( 0    10  -0.04) //vertex 25   
//
    ( 6    10   0.04) //vertex 26
    ( 0    10   0.04) //vertex 27   
//
    ( 13   10  -0.04) //vertex 28
    ( 13   10   0.04) //vertex 29         
//
    ( 40   10  -0.04) //vertex 30
    ( 40   10   0.04) //vertex 31                          
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (20 25 1) simpleGrading (1 1 1)  // block 0
    //
    hex (1 8 9 2 5 10 11 6) (174 25 1) simpleGrading (1 1 1)  // block 1*
    //
    hex (8 12 13 9 10 14 15 11) (135 25 1) simpleGrading (1 1 1)  // block 2
    //
    hex (3 2 16 17 7 6 18 19) (20 153 1) simpleGrading (1 1 1)  // block 3*
    //
    hex (2 9 20 16 6 11 21 18) (174 153 1) simpleGrading (1 1 1)  // block 4** cylinder
    //
    hex (9 13 22 20 11 15 23 21) (135 153 1) simpleGrading (1 1 1)  // block 5*
        //
    hex (17 16 24 25 19 18 26 27) (20 25 1) simpleGrading (1 1 1)  // block 6
        //
    hex (16 20 28 24 18 21 29 26) (174 25 1) simpleGrading (1 1 1)  // block 7*
        //
    hex (20 22 30 28 21 23 31 29) (135 25 1) simpleGrading (1 1 1)  // block 8
);

edges
(
);

patches
(
    patch in // patch 0
    (
        (0 4 7 3)
        (3 7 19 17)
        (17 19 27 25)
    )
    patch out // patch 1
    (
        (12 14 15 13) 
        (13 15 23 22)
        (22 23 31 30)              
    )
    patch top // patch 2
    (
        (25 27 26 24)
        (24 26 29 28)
        (28 29 31 30)        
    )
    patch bottom // patch 3
    (
        (12 14 10 8)
        (8 10 5 1)
        (1 5 4 0)        
    )
    empty back // patch 4
    (
        (0 3 2 1)
        (1 2 9 8)
        (8 9 13 12) 
        (3 17 16 2)
        (2 16 20 9)
        (9 20 22 13)
        (17 25 24 16)
        (16 24 28 20)
        (20 28 30 22)                      
    )
    empty front // patch 5
    (
        (4 5 6 7)
        (5 10 11 6)
        (10 14 15 11) 
        (7 6 18 19)
        (6 11 21 18)
        (11 15 23 21)
        (19 18 26 27)
        (18 21 29 26)
        (21 23 31 29)                     
    ) 
);

mergePatchPairs
(
);

// ************************************************************************* //
